name: Continuous Delivery

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  bump-version:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: write

    steps:
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}

      - name: Evaluate | Verify upstream has NOT changed
        shell: bash
        run: |
          set +o pipefail

          UPSTREAM_BRANCH_NAME="$(git status -sb | head -n 1 | cut -d' ' -f2 | grep -E '\.{3}' | cut -d'.' -f4)"
          printf '%s\n' "Upstream branch name: $UPSTREAM_BRANCH_NAME"

          set -o pipefail

          if [ -z "$UPSTREAM_BRANCH_NAME" ]; then
              printf >&2 '%s\n' "::error::Unable to determine upstream branch name!"
              exit 1
          fi

          git fetch "${UPSTREAM_BRANCH_NAME%%/*}"

          if ! UPSTREAM_SHA="$(git rev-parse "$UPSTREAM_BRANCH_NAME")"; then
              printf >&2 '%s\n' "::error::Unable to determine upstream branch sha!"
              exit 1
          fi

          HEAD_SHA="$(git rev-parse HEAD)"

          if [ "$HEAD_SHA" != "$UPSTREAM_SHA" ]; then
              printf >&2 '%s\n' "[HEAD SHA] $HEAD_SHA != $UPSTREAM_SHA [UPSTREAM SHA]"
              printf >&2 '%s\n' "::error::Upstream has changed, aborting release..."
              exit 1
          fi

          printf '%s\n' "Verified upstream branch has not changed, continuing with release..."

      - name: Action | Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.2.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

  build-linux:
    needs: bump-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.bump-version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller customtkinter pyautogui pynput pillow keyboard

      - name: Build Linux executable
        run: |
          chmod +x ./build-linux.sh
          ./build-linux.sh "$VERSION"

      - name: Upload Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: AdvancedAutoClicker-linux-$VERSION
          path: ./dist/AdvancedAutoClicker

  build-windows:
    needs: bump-version
    runs-on: windows-latest
    env:
      VERSION: ${{ needs.bump-version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller customtkinter pyautogui pynput pillow keyboard

      - name: Build Windows executable
        run: |
          call .\install_deps.bat
          python build_exe.py %VERSION%

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: AdvancedAutoClicker-windows-${{ env.VERSION }}
          path: .\dist\AdvancedAutoClicker.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.bump-version.outputs.new_version }}
          name: Advanced Auto Clicker ${{ needs.bump-version.outputs.new_version }}
          body: |
            Automated release generated by GitHub Actions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux executable to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.bump-version.outputs.new_version }}
          name: AdvancedAutoClicker-linux-${{ needs.bump-version.outputs.new_version }}
          asset_path: ./dist/AdvancedAutoClicker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows executable to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.bump-version.outputs.new_version }}
          name: AdvancedAutoClicker-windows-${{ needs.bump-version.outputs.new_version }}.exe
          asset_path: .\dist\AdvancedAutoClicker.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
